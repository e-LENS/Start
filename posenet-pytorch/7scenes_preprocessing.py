# -*- coding: utf-8 -*-
"""7scenes_preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17U0XxN72SS19eIS4m-Xa9LGG1ZDEvhbG
"""

import numpy as np
import os
import pandas as pd
from scipy.spatial.transform import Rotation

def count_image(dir_path):
    dirListing=os.listdir(dir_path)
    numOfImage=0
    for filename in dirListing:
        if ("color" in filename):
            numOfImage+=1
    return numOfImage

def transformation_to_6dof(data_path,j):
    origin_pose=pd.read_csv(data_path+"/frame-"+str(j).zfill(6)+".pose.txt",sep='\t',header=None)
    transformation=np.array(origin_pose.drop(columns=[4],axis=1))
    rotation=transformation[0:3,0:3]
    translation=transformation[0:3,3]
    X,Y,Z=translation
    r=Rotation.from_matrix(np.asarray(rotation))
    heading=r.as_quat()
    W,P,Q,R=(heading[3],heading[0],heading[1],heading[2])
    dof6=[X,Y,Z,W,P,Q,R]
    return round(X,6),round(Y,6),round(Z,6),round(W,6),round(P,6),round(Q,6),round(R,6)


# data_path="[Your dataset directory path]"
data_path="C:\\Users\\min10\\posenet-pytorch\\datasets\\fire"

# TrainSplit.txt 와 Testsplit.txt 의 sequence number를 입력
# 아래 코드는 TrainSplit.txt : sequence1, sequence2 // TestSplit.txt : sequence3, sequence4
train_seqnum=[1, 2]
test_seqnum=[3, 4]

# 변형된 label값들은 ./dataset_train.txt & ./dataset_test.txt 에 저장된다.
f=open(data_path+"/dataset_train.txt",'w')
f.write("Visual Landmark Dataset V1\nImageFile, Camera Position [X Y Z W P Q R]\n\n")

for i in train_seqnum:
    numOfImage=count_image(data_path+"/seq-"+str(i).zfill(2))
    for j in range(numOfImage):
        X,Y,Z,W,P,Q,R=transformation_to_6dof(data_path+"/seq-"+str(i).zfill(2),j)
        f.write("seq-"+str(i).zfill(2)+"/frame-"+str(j).zfill(6)+"_color.png "
                +str(X)+" "+str(Y)+" "+str(Z)+" "+str(W)+" "+str(P)+" "+str(Q)+" "+str(R)+"\n")
f.close()


f=open(data_path+"/dataset_test.txt",'w')
f.write("Visual Landmark Dataset V1\nImageFile, Camera Position [X Y Z W P Q R]\n\n")

for i in test_seqnum:
    numOfImage=count_image(data_path+"/seq-"+str(i).zfill(2))
    for j in range(numOfImage):
        X,Y,Z,W,P,Q,R=transformation_to_6dof(data_path+"/seq-"+str(i).zfill(2),j)
        f.write("seq-"+str(i).zfill(2)+"/frame-"+str(j).zfill(6)+"_color.png "
                +str(X)+" "+str(Y)+" "+str(Z)+" "+str(W)+" "+str(P)+" "+str(Q)+" "+str(R)+"\n")
f.close()